/* GENERAL BOOTSTRAP THEME SPECIFIC OVERWRITES - REQURIES CLEANUP & SPLIT IN FILES! */


// Navigation stylings
.nav {
	a {
		color: @navigation-links-color;
		&:hover {
			color: #FFF;
		}
	}
}

.navbar{
	border: none;
	margin-bottom: 0;
	border-radius: 0;

	.navbar-text{
		h1,h2,h3,h4,h5,h6{
			margin: 0px 15px;
		}
	}

}

.navbar-default{
	.box-shadow(0 1px 0 @default-grey-600);
}

.navbar-right{
	float: right!important;
	display: block;
}

.navbar-left{
	float: left!important;
	display: block;
}


.page-header{
	border:none;
	margin-top:0px;
	margin-bottom: 15px;
}

// Panels 
.panel{
	.box-shadow(0 1px 0 @default-grey-600);
	border:none;

	&.panel-primary{
			border-left:5px solid @default-blue;
	}

	&.panel-success{
			border-left:5px solid @default-green;
	}

	&.panel-info{
			border-left:5px solid @state-info-bg;
	}

	&.panel-warning{
			border-left:5px solid @default-yellow;
	}

	&.panel-danger{
		border-left:5px solid @default-red;
	}

	&.panel-border{
		border: 1px solid @default-grey-600;
		border-radius: 0;
		.box-shadow(0 0 0 @default-grey-600);
	}
	.panel-heading{

		// RESET FOR HEADING TO USE RIGHT MARKUP
		h1,h2,h3,h4,h5,h6{
			font-size: 18px;
			margin-bottom: 10px;
			margin-top: 10px;
		}
	}
}

.table{
		border-collapse: separate;

		> thead,
		> tbody,
		> tfoot {
			> tr {
				> th,
				> td {
					.box-shadow(0 1px 0 @default-grey-600);
					//border-bottom: 1px solid @default-grey-600;
					//border-top: 4px solid @default-grey;	

					&.sticky-right{

						text-align: right;
					}			
			  	}

			  	> th{
			  		background: @dark-blue;
					color: #fff;

					a{
						color: #fff;
					}

			  		&:first-child{
			  			border-top-left-radius: @border-radius-base;
			  		}
			  		&:last-child{
			  			border-top-right-radius: @border-radius-base;
			  		}
		  		}

		  		> td:first-child {
            		padding-left: @table-cell-padding + 5;
          		}


		  		&:last-child{
			  		> th,
					> td {
						border-bottom: none;
					}
		  		}

		  		&.active{
		  			a {
		  				color: #fff;
		  			}
		  		}
			}
  		}
	}


// Important States are important for keeping the active state from overwriting the borders and padding 
.table-row-variant-custom(success; @gray-dark;#fff; 5px solid @state-success-bg ~'!important'; @table-cell-padding~'!important');
.table-row-variant-custom(info; @gray-dark;#fff; 5px solid @state-info-bg~'!important'; @table-cell-padding~'!important');
.table-row-variant-custom(warning; @gray-dark;#fff; 5px solid @state-warning-bg~'!important'; @table-cell-padding~'!important');
.table-row-variant-custom(danger; @gray-dark; #fff; 5px solid @state-danger-bg~'!important'; @table-cell-padding~'!important');
.table-row-variant-custom(active; #fff; @table-row-active-color; none; (@table-cell-padding + 5));


.popover-variant(success; @state-success-bg; 5px solid @state-success-bg; #fff);
.popover-variant(info; @state-info-bg; 5px solid @state-info-bg; #fff);
.popover-variant(warning; @state-warning-bg; 5px solid @state-warning-bg; #fff);
.popover-variant(danger; @state-danger-bg; 5px solid @state-danger-bg; #fff);

.label{
	font-weight: normal;
}


.alert-primary {
  .alert-variant(@brand-primary; @brand-primary; @alert-success-text);
}

.alert-processing {
  .alert-variant(@dark-blue; @dark-blue; @alert-success-text);
}


.close {
	.opacity(1);
	text-shadow: none;
}


form.dropdown-menu{
	padding: 15px;
}

.list-group-item{
	overflow: hidden;
}

// Boostrap custom classes extentions

/* custom badges theming */

.badge{

	&.badge-default{
		.label-variant(@label-default-bg);
	}
	&.badge-primary{
		  .label-variant(@label-primary-bg);
	}

	&.badge-info{
		.label-variant(@label-info-bg);
	}

	&.badge-success{
		.label-variant(@label-success-bg);
	}
	&.badge-warning{
		.label-variant(@state-warning-bg);
	}

	&.badge-danger{
		.label-variant(@label-danger-bg);
	}
}


/* pagination */

.pagination{
	margin-top: 0px;
}

/* custom pre theming */

pre{

	&.pre-lg{
		.input-lg();
	}
	&.pre-sm{
		.input-sm();
	}
}


.form-readonly-text{
	padding: @padding-base-vertical 12px;
	padding-left:0px;
	height: auto;

	color: @input-color;

	&.form-readonly-text-lg{
		.input-lg();
		padding-left:0px;
		height: auto;
	}
	&.form-readonly-text-sm{
		.input-sm();
		padding-left:0px;
		height: auto;
	}
}

.caret{
	display: inline-block;
	width: 0;
	height: 0;
	margin-left: 2px;
	vertical-align: middle;

	&.left {
		border-right:   @caret-width-base solid;
		border-top: @caret-width-base solid transparent;
		border-bottom:  @caret-width-base solid transparent;
		border-left: 0;
	}
	&.right {
		border-left:   @caret-width-base solid;
		border-top: @caret-width-base solid transparent;
		border-bottom:  @caret-width-base solid transparent;
		border-right: 0;
	}
}

.color-danger{
	color: @default-red;
}

.light-text{
	color: @light-blue-700;
}


// CUSTOMIZING SKINNING FOR TABS 
.nav-tabs {
  > li {
    > a {

    		&:hover,
    		&:active{
    			color: @default-blue;
    			border-color: @default-blue
    		}

    	}
    }
}

// Overwrite of backgroundcolor for input-group-addons 

.has-success,
.has-warning,
.has-error {
	.input-group-addon{
		background: @alert-success-text;
	}
  
}



.dropdown-menu {
	min-width: 300px;
}


.list-group-item{
	// If you can remove items from the list
	&.deleteable{
		// Icon skinning
		.list-group-item-delete{
			position: absolute;
			right: 15px;
			top: 45%;
			color: @default-red;
			font-size: 1.4em;
			cursor: pointer;
		}
		padding-right: 44px;
		position: relative;
	}
}


// Set fallback border to avoid jumping content when other state is applied 
.list-group{
	> .list-group-item{
		border-left: 5px solid @list-group-bg;
	}
}
.list-group .list-group-item {
    vertical-align: middle;
}

h1,h2,h3,h4,h5,h6{
	&.list-group-item-heading{
		small{
			display: block;
			margin-bottom: 10px;
		}
	}
}



// Icon within the modal title

.modal-title{
	.glyphicon{
		margin-right: 6px;
	}
}

.modal-content{
	> .list-group{
		 > .list-group-item{
		 	border-radius: 0;
		 	border-left: 0px;
		 	border-right: 0px;

		 	&:last-child{
		 		border-bottom: 0px;
		 	}
		 }
	}
}




// List Group Items States
.list-group-item-variant(has-info; @state-info-bg; );
.list-group-item-variant(has-success; @state-success-bg; );
.list-group-item-variant(has-danger; @state-danger-bg; );
.list-group-item-variant(has-warning; @state-warning-bg; );




// Validation Status for Tabs and standalone Pills 

.nav-tabs-variant(has-success; transparent; @state-success-bg; @state-success-bg;);
.nav-tabs-variant(has-info; transparent; @state-info-bg; @state-info-bg);
.nav-tabs-variant(has-warning; transparent; @state-warning-bg; @state-warning-bg;);
.nav-tabs-variant(has-error; transparent; @state-danger-bg; @state-danger-bg;);

.nav-pill-variant(default; transparent; @dark-grey; @dark-grey-800;);
.nav-pill-variant(has-success; transparent; @state-success-bg; @state-success-bg;);
.nav-pill-variant(has-info; transparent; @state-info-bg; @state-info-bg);
.nav-pill-variant(has-warning; transparent; @state-warning-bg; @state-warning-bg;);
.nav-pill-variant(has-error; transparent; @state-danger-bg; @state-danger-bg;);



// Input Icons left hand side


.has-feedback {
	&.has-feedback-left{

	  // Ensure icons don't overlap text
	  .form-control {
	    padding-left: (@input-height-base * 1.25);
	    padding-right: 0;
	  }

	  // Feedback icon (requires .glyphicon classes)
	  .form-control-feedback {
	    right: auto;
	    left: 0;
	    top: (@line-height-computed + 5); // Height of the `label` and its margin
	  }
	}

	// Reposition feedback icon if label is hidden with "screenreader only" state - Fixed in Boostrap 3.2.0 
	label.sr-only ~ .form-control-feedback {
 		top: 0;
 	}
}

// Alignment of feedback for inputsizes - Fixed in Boostrap 3.2.0 

.input-lg + .form-control-feedback {
	width: @input-height-large;
	height: @input-height-large;
	line-height: @input-height-large;
}
.input-sm + .form-control-feedback {
	width: @input-height-small;
	height: @input-height-small;
	line-height: @input-height-small;
}



.table-responsive{
	-webkit-overflow-scrolling: touch;
}



// Button input groups fixes
// -------------------------
.input-group-btn {

    > .btn,
    > .btn-group {
      margin-top: -2px;
  }

}



// MIXINS

/* CUSTOM MIXINS */


/* EXTENDED THE DEFAULT TABLEROW MIXIN TO APPLY CUSTOM BORDER */
.table-row-variant-custom(@state; @color; @background; @border; @first-table-cell-padding) {

  .table > thead > tr,
  .table > tbody > tr,
  .table > tfoot > tr {

    > td.@{state},
    > th.@{state},
    &.@{state} > td,
    &.@{state} > th {
    	background-color: @background;
      color: @color;
    }
    > td.@{state}:first-child,
    > th.@{state}:first-child,
    &.@{state} > td:first-child,
    &.@{state} > th:first-child{
    	border-left: @border;
      padding-left: @first-table-cell-padding;
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover > tbody > tr {
    > td.@{state}:hover,
    > th.@{state}:hover,
    &.@{state}:hover > td,
    &.@{state}:hover > th {
      background-color: darken(@background, 5%);
    }
  }
}



/* EXTENDED THE DEFAULT POPUP TO HAVE DIFFERENT STATES */
.popover-variant(@state; @background; @border; @color) {

  .popover{
    &.@{state}{
      background: @background;
      color: @color;

      &.top {
        > .arrow:after{
        border-top-color: @background;
        }
      }
      &.bottom {
        > .arrow:after{
        border-bottom-color: @background;
        }
      }
      &.left {
        > .arrow:after{
        border-left-color: @background;
        }
      }
      &.right {
        > .arrow:after{
        border-right-color: @background;
        }
      }


      .popover-title{
        background: darken(@background, 5%);
        color: @color;
        border-bottom: @border;
      }
    }
  }

}


// Button variants 
// -------------------------
// with more parameter so you get full controll over hover etc states
.button-variant-custom(@color-default; @background-default; @border-default; @boxshadow-default; @color-hover; @background-hover; @border-hover; @boxshadow-hover) {
  color: @color-default;
  background-color: @background-default;
  border-color: @border-default;
  .box-shadow(0 2px 0 fade(@boxshadow-default, 100%));

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open .dropdown-toggle& {
    color: @color-hover;
    background-color: @background-hover;
        border-color: @border-hover;
    .box-shadow(0 2px 0 fade(darken(@boxshadow-hover, 4%), 100%));
  }
  &:active,
  &.active,
  .open .dropdown-toggle& {
    background-image: none;
    background-color: lighten(@background-hover, 4%);
        border-color: lighten(@border-hover, 4%);
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    .box-shadow(0 2px 0 fade(@boxshadow-default, 100%));

    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: @background-default;
          border-color: @border-default;
    }
    &:active,
    &.active,
    .open .dropdown-toggle& {
    background-image: none;
    background-color: lighten(@background-hover, 4%);
        border-color: lighten(@border-hover, 4%);
        .box-shadow(0 2px 0 fade(darken(@boxshadow-hover, 4%), 100%));
  }
  }

  .badge {
    color: @background-default;
    background-color: @color-default;
  }
}



// Standalone Pills with States
// -------------------------
.nav-pill-variant(@state; @background; @border; @color) {
  .nav-pill-style(){
     display: block;
      padding: 10px 15px;
      position: relative;
      border-radius: @nav-pills-border-radius;
      margin-left: 2px;
      background: @background;
      color: @color;
      float: left;
      border: 1px solid @border;

    &.active,
    & a:hover,
    & a:focus{
            background: lighten(@border, 30%);
            color: darken(@color, 5%)
    }

  }

    .nav-pill{
      .nav-pill-state() when (@state = default) {
        .nav-pill-style;
      }
      .nav-pill-state(){
        &.@{state}{
          .nav-pill-style;
        }
      }
      .nav-pill-state;
    }




}


// States for Tabs
// -------------------------
.nav-tabs-variant(@state; @background; @border; @color; ) {

  .nav-tabs {
      //border-bottom: @border;
    > li.@{state} {

      // Actual tabs (as links)
      > a {
        background: @background;
        color: @color;
        &:hover {
          border-color: @border @border @border;
        }
      }

      // Active state, and its :hover to override normal :hover
      &.active > a {
        &,
        &:hover,
        &:focus {
          color: @color;
          background-color: #fff;
          border: 1px solid @border;
          border-bottom-color: transparent;
        }
      }
    }
  }
}



// States for List Group Items
.list-group-item-variant(@state; @border-left;) {
  .list-group{
  > .list-group-item{
    &.@{state}{
        border-left: 5px solid @border-left;
    }
  }
  }
}



